/*п.1 - по умолчанию все карточки будут выводиться в одну колонку на всю ширину экрана, что и применится для устройств с шириной экрана до 479px*/

/*А при ширине экрана от 480px и выше родительский элемент становится flex-контейнером, что позволяет более гибко управлять выводом дочерних элементов*/
@media (min-width: 480px) {
  .container {
    display: flex;
    flex-wrap: wrap;
  }
  
  .card {  
    /*Суть задачи в том, чтобы все ряды были заполнены карточками на 100% ширины.
      Применение этого свойства упрощает данную задачу, позволяя всегда задавать ширину карточки целым числом процентов ширины окна
      и не задавать отдельного правила для последнего ряда карточек, если их количество недостаточно для заполнения ряда по общему правилу
    */ 
    flex-grow: 1;
  }
}

@media (min-width: 480px) and (max-width: 640px) { /*п.2*/
  /*Значение по умолчанию*/
  .card {
    width: 50%;
  }
  /*Значение для карточек 3, 6, 9, 12, 15 и 18*/  
  .card:nth-child(3n) {
    width: 100%;
  }
}

@media (min-width: 641px) and (max-width: 960px) { /*п.3*/
  /*Значение по умолчанию*/
  .card {
    width: 33%; /*автоматически растянутся точно на 1/3 окна каждая*/
  }
  /*Значение для карточек 1, 2, 6, 7, 11, 12, 16 и 17*/  
  .card:nth-child(5n+1), .card:nth-child(5n+2) {
    width: 50%;
  }
}
 
@media (min-width: 961px) and (max-width: 1280px) { /*п.4*/
  /*Значение по умолчанию*/
  .card {
    width: 25%;
  }
  /*Значение для карточек 5, 6, 11, 12*/ 
  .card:nth-child(-6n+11), .card:nth-child(-6n+12) {
    width: 50%;
  }  
}

@media (min-width: 1281px) { /*п.5*/
 
  .card {  
    /*Значение по умолчанию*/
    width: 20%;
  }
  /*Значение для карточек 6, 7, 8, 14, 15, 16*/
  .card:nth-child(8n+6), .card:nth-child(8n+7), .card:nth-child(8n) {
    width: 33%; /*автоматически растянутся точно на 1/3 окна каждая*/
  }
  /*Карточки последнего ряда (17, 18, 19, 20) автоматически растянутся по ширине окна*/  
}